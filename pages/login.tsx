import LoginLayout from '@/layouts/LoginLayout';
import Button from '@/components/common/Button';
import Input from '@/components/common/Input';

import { useFormik } from 'formik';
import { useRouter } from 'next/router';
import * as Yup from 'yup';

interface IFormik {
	email: string;
	password: string;
}

const LoginPage = (): JSX.Element => {
	const router = useRouter();

	const formik = useFormik<IFormik>({
		initialValues: {
			email: '',
			password: '',
		},
		validationSchema: Yup.object().shape({
			email: Yup.string().email().required('–≠—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ'),
			password: Yup.string().required('–≠—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ'),
		}),
		onSubmit: (values) => {
			if (values.email === 'admin@mail.ru' && values.password === 'admin')
				router.push('/admin');
			else if (values.email === 'student@mail.ru' && values.password === '123')
				router.push('/student');
		},
	});

	return (
		<LoginLayout>
			<h1 className='text-heading-1 mt-28'>
				–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! üëã
			</h1>
			<p className='text-BodyText_14 text-darkGrey mt-4'>
				–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É &quot;–ö–æ—Å–º–æ–ø–æ—Ä—Ç&quot;
				<br />
				–ü—Ä–∏–¥—É–º–∞–π –ø–∞—Ä–æ–ª—å, —á—Ç–æ–±—ã –≤–æ–π—Ç–∏ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
			</p>
			<form onSubmit={formik.handleSubmit} className='max-w-[420px] mt-6 grid gap-[14px]'>
				<Input
					className='w-full'
					placeholder='–ü–æ—á—Ç–∞'
					type='email'
					name='email'
					onChange={formik.handleChange}
					value={formik.values.email}
					errorMessage={formik.submitCount ? formik.errors.email : undefined} />
				<Input
					className='w-full'
					placeholder='–ü–∞—Ä–æ–ª—å'
					type='password'
					name='password'
					onChange={formik.handleChange}
					value={formik.values.password}
					errorMessage={formik.submitCount ? formik.errors.password : undefined} />
				<Button variant='filled' color='black'>
					–í–æ–π—Ç–∏
				</Button>
			</form>
		</LoginLayout>
	);
};

export default LoginPage;
